// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_referenceline.proto

#pragma warning (disable : 4125)
#include "osi_referenceline.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_osi_5fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Identifier_osi_5fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_osi_5freferenceline_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReferenceLine_ReferenceLinePoint_osi_5freferenceline_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_osi_5fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vector3d_osi_5fcommon_2eproto;
namespace osi3 {
class ReferenceLine_ReferenceLinePointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReferenceLine_ReferenceLinePoint> _instance;
} _ReferenceLine_ReferenceLinePoint_default_instance_;
class ReferenceLineDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReferenceLine> _instance;
} _ReferenceLine_default_instance_;
}  // namespace osi3
static void InitDefaultsscc_info_ReferenceLine_osi_5freferenceline_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osi3::_ReferenceLine_default_instance_;
    new (ptr) ::osi3::ReferenceLine();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::ReferenceLine::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ReferenceLine_osi_5freferenceline_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_ReferenceLine_osi_5freferenceline_2eproto}, {
      &scc_info_Identifier_osi_5fcommon_2eproto.base,
      &scc_info_ReferenceLine_ReferenceLinePoint_osi_5freferenceline_2eproto.base,}};

static void InitDefaultsscc_info_ReferenceLine_ReferenceLinePoint_osi_5freferenceline_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osi3::_ReferenceLine_ReferenceLinePoint_default_instance_;
    new (ptr) ::osi3::ReferenceLine_ReferenceLinePoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osi3::ReferenceLine_ReferenceLinePoint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReferenceLine_ReferenceLinePoint_osi_5freferenceline_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ReferenceLine_ReferenceLinePoint_osi_5freferenceline_2eproto}, {
      &scc_info_Vector3d_osi_5fcommon_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_osi_5freferenceline_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_osi_5freferenceline_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_osi_5freferenceline_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_osi_5freferenceline_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osi3::ReferenceLine_ReferenceLinePoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osi3::ReferenceLine_ReferenceLinePoint, world_position_),
  PROTOBUF_FIELD_OFFSET(::osi3::ReferenceLine_ReferenceLinePoint, s_position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osi3::ReferenceLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osi3::ReferenceLine, id_),
  PROTOBUF_FIELD_OFFSET(::osi3::ReferenceLine, poly_line_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osi3::ReferenceLine_ReferenceLinePoint)},
  { 7, -1, sizeof(::osi3::ReferenceLine)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osi3::_ReferenceLine_ReferenceLinePoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osi3::_ReferenceLine_default_instance_),
};

const char descriptor_table_protodef_osi_5freferenceline_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027osi_referenceline.proto\022\004osi3\032\020osi_com"
  "mon.proto\"\272\001\n\rReferenceLine\022\034\n\002id\030\001 \001(\0132"
  "\020.osi3.Identifier\0229\n\tpoly_line\030\002 \003(\0132&.o"
  "si3.ReferenceLine.ReferenceLinePoint\032P\n\022"
  "ReferenceLinePoint\022&\n\016world_position\030\001 \001"
  "(\0132\016.osi3.Vector3d\022\022\n\ns_position\030\002 \001(\001B\002"
  "H\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_osi_5freferenceline_2eproto_deps[1] = {
  &::descriptor_table_osi_5fcommon_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_osi_5freferenceline_2eproto_sccs[2] = {
  &scc_info_ReferenceLine_osi_5freferenceline_2eproto.base,
  &scc_info_ReferenceLine_ReferenceLinePoint_osi_5freferenceline_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_osi_5freferenceline_2eproto_once;
static bool descriptor_table_osi_5freferenceline_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_osi_5freferenceline_2eproto = {
  &descriptor_table_osi_5freferenceline_2eproto_initialized, descriptor_table_protodef_osi_5freferenceline_2eproto, "osi_referenceline.proto", 250,
  &descriptor_table_osi_5freferenceline_2eproto_once, descriptor_table_osi_5freferenceline_2eproto_sccs, descriptor_table_osi_5freferenceline_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_osi_5freferenceline_2eproto::offsets,
  file_level_metadata_osi_5freferenceline_2eproto, 2, file_level_enum_descriptors_osi_5freferenceline_2eproto, file_level_service_descriptors_osi_5freferenceline_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_osi_5freferenceline_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_osi_5freferenceline_2eproto), true);
namespace osi3 {

// ===================================================================

void ReferenceLine_ReferenceLinePoint::InitAsDefaultInstance() {
  ::osi3::_ReferenceLine_ReferenceLinePoint_default_instance_._instance.get_mutable()->world_position_ = const_cast< ::osi3::Vector3d*>(
      ::osi3::Vector3d::internal_default_instance());
}
class ReferenceLine_ReferenceLinePoint::_Internal {
 public:
  static const ::osi3::Vector3d& world_position(const ReferenceLine_ReferenceLinePoint* msg);
};

const ::osi3::Vector3d&
ReferenceLine_ReferenceLinePoint::_Internal::world_position(const ReferenceLine_ReferenceLinePoint* msg) {
  return *msg->world_position_;
}
void ReferenceLine_ReferenceLinePoint::clear_world_position() {
  if (GetArenaNoVirtual() == nullptr && world_position_ != nullptr) {
    delete world_position_;
  }
  world_position_ = nullptr;
}
ReferenceLine_ReferenceLinePoint::ReferenceLine_ReferenceLinePoint()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.ReferenceLine.ReferenceLinePoint)
}
ReferenceLine_ReferenceLinePoint::ReferenceLine_ReferenceLinePoint(const ReferenceLine_ReferenceLinePoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_world_position()) {
    world_position_ = new ::osi3::Vector3d(*from.world_position_);
  } else {
    world_position_ = nullptr;
  }
  s_position_ = from.s_position_;
  // @@protoc_insertion_point(copy_constructor:osi3.ReferenceLine.ReferenceLinePoint)
}

void ReferenceLine_ReferenceLinePoint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReferenceLine_ReferenceLinePoint_osi_5freferenceline_2eproto.base);
  ::memset(&world_position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&s_position_) -
      reinterpret_cast<char*>(&world_position_)) + sizeof(s_position_));
}

ReferenceLine_ReferenceLinePoint::~ReferenceLine_ReferenceLinePoint() {
  // @@protoc_insertion_point(destructor:osi3.ReferenceLine.ReferenceLinePoint)
  SharedDtor();
}

void ReferenceLine_ReferenceLinePoint::SharedDtor() {
  if (this != internal_default_instance()) delete world_position_;
}

void ReferenceLine_ReferenceLinePoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReferenceLine_ReferenceLinePoint& ReferenceLine_ReferenceLinePoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReferenceLine_ReferenceLinePoint_osi_5freferenceline_2eproto.base);
  return *internal_default_instance();
}


void ReferenceLine_ReferenceLinePoint::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.ReferenceLine.ReferenceLinePoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && world_position_ != nullptr) {
    delete world_position_;
  }
  world_position_ = nullptr;
  s_position_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReferenceLine_ReferenceLinePoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osi3.Vector3d world_position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_world_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double s_position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          s_position_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReferenceLine_ReferenceLinePoint::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.ReferenceLine.ReferenceLinePoint)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Vector3d world_position = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_world_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double s_position = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (17 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   double, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.ReferenceLine.ReferenceLinePoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.ReferenceLine.ReferenceLinePoint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReferenceLine_ReferenceLinePoint::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.ReferenceLine.ReferenceLinePoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Vector3d world_position = 1;
  if (this->has_world_position()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::world_position(this), output);
  }

  // double s_position = 2;
  if (!(this->s_position() <= 0 && this->s_position() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDouble(2, this->s_position(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.ReferenceLine.ReferenceLinePoint)
}

::PROTOBUF_NAMESPACE_ID::uint8* ReferenceLine_ReferenceLinePoint::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.ReferenceLine.ReferenceLinePoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Vector3d world_position = 1;
  if (this->has_world_position()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::world_position(this), target);
  }

  // double s_position = 2;
  if (!(this->s_position() <= 0 && this->s_position() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->s_position(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.ReferenceLine.ReferenceLinePoint)
  return target;
}

size_t ReferenceLine_ReferenceLinePoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.ReferenceLine.ReferenceLinePoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osi3.Vector3d world_position = 1;
  if (this->has_world_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *world_position_);
  }

  // double s_position = 2;
  if (!(this->s_position() <= 0 && this->s_position() >= 0)) {
    total_size += 1 + 8;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReferenceLine_ReferenceLinePoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.ReferenceLine.ReferenceLinePoint)
  GOOGLE_DCHECK_NE(&from, this);
  const ReferenceLine_ReferenceLinePoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReferenceLine_ReferenceLinePoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.ReferenceLine.ReferenceLinePoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.ReferenceLine.ReferenceLinePoint)
    MergeFrom(*source);
  }
}

void ReferenceLine_ReferenceLinePoint::MergeFrom(const ReferenceLine_ReferenceLinePoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.ReferenceLine.ReferenceLinePoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_world_position()) {
    mutable_world_position()->::osi3::Vector3d::MergeFrom(from.world_position());
  }
  if (!(from.s_position() <= 0 && from.s_position() >= 0)) {
    set_s_position(from.s_position());
  }
}

void ReferenceLine_ReferenceLinePoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.ReferenceLine.ReferenceLinePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReferenceLine_ReferenceLinePoint::CopyFrom(const ReferenceLine_ReferenceLinePoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.ReferenceLine.ReferenceLinePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReferenceLine_ReferenceLinePoint::IsInitialized() const {
  return true;
}

void ReferenceLine_ReferenceLinePoint::InternalSwap(ReferenceLine_ReferenceLinePoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(world_position_, other->world_position_);
  swap(s_position_, other->s_position_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReferenceLine_ReferenceLinePoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReferenceLine::InitAsDefaultInstance() {
  ::osi3::_ReferenceLine_default_instance_._instance.get_mutable()->id_ = const_cast< ::osi3::Identifier*>(
      ::osi3::Identifier::internal_default_instance());
}
class ReferenceLine::_Internal {
 public:
  static const ::osi3::Identifier& id(const ReferenceLine* msg);
};

const ::osi3::Identifier&
ReferenceLine::_Internal::id(const ReferenceLine* msg) {
  return *msg->id_;
}
void ReferenceLine::clear_id() {
  if (GetArenaNoVirtual() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
}
ReferenceLine::ReferenceLine()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.ReferenceLine)
}
ReferenceLine::ReferenceLine(const ReferenceLine& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      poly_line_(from.poly_line_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::osi3::Identifier(*from.id_);
  } else {
    id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osi3.ReferenceLine)
}

void ReferenceLine::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReferenceLine_osi_5freferenceline_2eproto.base);
  id_ = nullptr;
}

ReferenceLine::~ReferenceLine() {
  // @@protoc_insertion_point(destructor:osi3.ReferenceLine)
  SharedDtor();
}

void ReferenceLine::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void ReferenceLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReferenceLine& ReferenceLine::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReferenceLine_osi_5freferenceline_2eproto.base);
  return *internal_default_instance();
}


void ReferenceLine::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.ReferenceLine)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  poly_line_.Clear();
  if (GetArenaNoVirtual() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReferenceLine::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osi3.Identifier id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .osi3.ReferenceLine.ReferenceLinePoint poly_line = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_poly_line(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReferenceLine::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.ReferenceLine)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osi3.Identifier id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .osi3.ReferenceLine.ReferenceLinePoint poly_line = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_poly_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.ReferenceLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.ReferenceLine)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReferenceLine::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.ReferenceLine)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier id = 1;
  if (this->has_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::id(this), output);
  }

  // repeated .osi3.ReferenceLine.ReferenceLinePoint poly_line = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->poly_line_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->poly_line(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.ReferenceLine)
}

::PROTOBUF_NAMESPACE_ID::uint8* ReferenceLine::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.ReferenceLine)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osi3.Identifier id = 1;
  if (this->has_id()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::id(this), target);
  }

  // repeated .osi3.ReferenceLine.ReferenceLinePoint poly_line = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->poly_line_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->poly_line(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.ReferenceLine)
  return target;
}

size_t ReferenceLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.ReferenceLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osi3.ReferenceLine.ReferenceLinePoint poly_line = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->poly_line_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->poly_line(static_cast<int>(i)));
    }
  }

  // .osi3.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReferenceLine::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.ReferenceLine)
  GOOGLE_DCHECK_NE(&from, this);
  const ReferenceLine* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReferenceLine>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.ReferenceLine)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.ReferenceLine)
    MergeFrom(*source);
  }
}

void ReferenceLine::MergeFrom(const ReferenceLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.ReferenceLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  poly_line_.MergeFrom(from.poly_line_);
  if (from.has_id()) {
    mutable_id()->::osi3::Identifier::MergeFrom(from.id());
  }
}

void ReferenceLine::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.ReferenceLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReferenceLine::CopyFrom(const ReferenceLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.ReferenceLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReferenceLine::IsInitialized() const {
  return true;
}

void ReferenceLine::InternalSwap(ReferenceLine* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&poly_line_)->InternalSwap(CastToBase(&other->poly_line_));
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReferenceLine::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::osi3::ReferenceLine_ReferenceLinePoint* Arena::CreateMaybeMessage< ::osi3::ReferenceLine_ReferenceLinePoint >(Arena* arena) {
  return Arena::CreateInternal< ::osi3::ReferenceLine_ReferenceLinePoint >(arena);
}
template<> PROTOBUF_NOINLINE ::osi3::ReferenceLine* Arena::CreateMaybeMessage< ::osi3::ReferenceLine >(Arena* arena) {
  return Arena::CreateInternal< ::osi3::ReferenceLine >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
