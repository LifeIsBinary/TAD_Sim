// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene_infrastructure_group.proto
#pragma warning (disable : 4125)
#include "scene_infrastructure_group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_scene_5finfrastructure_5fgroup_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Infrastructure_scene_5finfrastructure_5fgroup_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scene_5finfrastructure_5fgroup_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Infrastructure_Extrinsic_scene_5finfrastructure_5fgroup_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scene_5finfrastructure_5fgroup_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Infrastructure_Intrinsic_scene_5finfrastructure_5fgroup_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scene_5finfrastructure_5fgroup_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Infrastructure_Intrinsic_ParamsEntry_DoNotUse_scene_5finfrastructure_5fgroup_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_waypoint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Waypoint_waypoint_2eproto;
namespace sim_msg {
class Infrastructure_Intrinsic_ParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Infrastructure_Intrinsic_ParamsEntry_DoNotUse> _instance;
} _Infrastructure_Intrinsic_ParamsEntry_DoNotUse_default_instance_;
class Infrastructure_IntrinsicDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Infrastructure_Intrinsic> _instance;
} _Infrastructure_Intrinsic_default_instance_;
class Infrastructure_ExtrinsicDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Infrastructure_Extrinsic> _instance;
} _Infrastructure_Extrinsic_default_instance_;
class InfrastructureDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Infrastructure> _instance;
} _Infrastructure_default_instance_;
class InfrastructureGroupDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InfrastructureGroup> _instance;
} _InfrastructureGroup_default_instance_;
}  // namespace sim_msg
static void InitDefaultsscc_info_Infrastructure_scene_5finfrastructure_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sim_msg::_Infrastructure_default_instance_;
    new (ptr) ::sim_msg::Infrastructure();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sim_msg::Infrastructure::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Infrastructure_scene_5finfrastructure_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_Infrastructure_scene_5finfrastructure_5fgroup_2eproto}, {
      &scc_info_Infrastructure_Extrinsic_scene_5finfrastructure_5fgroup_2eproto.base,
      &scc_info_Infrastructure_Intrinsic_scene_5finfrastructure_5fgroup_2eproto.base,
      &scc_info_Waypoint_waypoint_2eproto.base,}};

static void InitDefaultsscc_info_Infrastructure_Extrinsic_scene_5finfrastructure_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sim_msg::_Infrastructure_Extrinsic_default_instance_;
    new (ptr) ::sim_msg::Infrastructure_Extrinsic();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sim_msg::Infrastructure_Extrinsic::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Infrastructure_Extrinsic_scene_5finfrastructure_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_Infrastructure_Extrinsic_scene_5finfrastructure_5fgroup_2eproto}, {}};

static void InitDefaultsscc_info_Infrastructure_Intrinsic_scene_5finfrastructure_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sim_msg::_Infrastructure_Intrinsic_default_instance_;
    new (ptr) ::sim_msg::Infrastructure_Intrinsic();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sim_msg::Infrastructure_Intrinsic::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Infrastructure_Intrinsic_scene_5finfrastructure_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_Infrastructure_Intrinsic_scene_5finfrastructure_5fgroup_2eproto}, {
      &scc_info_Infrastructure_Intrinsic_ParamsEntry_DoNotUse_scene_5finfrastructure_5fgroup_2eproto.base,}};

static void InitDefaultsscc_info_Infrastructure_Intrinsic_ParamsEntry_DoNotUse_scene_5finfrastructure_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sim_msg::_Infrastructure_Intrinsic_ParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::sim_msg::Infrastructure_Intrinsic_ParamsEntry_DoNotUse();
  }
  ::sim_msg::Infrastructure_Intrinsic_ParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Infrastructure_Intrinsic_ParamsEntry_DoNotUse_scene_5finfrastructure_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_Infrastructure_Intrinsic_ParamsEntry_DoNotUse_scene_5finfrastructure_5fgroup_2eproto}, {}};

static void InitDefaultsscc_info_InfrastructureGroup_scene_5finfrastructure_5fgroup_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sim_msg::_InfrastructureGroup_default_instance_;
    new (ptr) ::sim_msg::InfrastructureGroup();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sim_msg::InfrastructureGroup::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InfrastructureGroup_scene_5finfrastructure_5fgroup_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_InfrastructureGroup_scene_5finfrastructure_5fgroup_2eproto}, {
      &scc_info_Infrastructure_scene_5finfrastructure_5fgroup_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_scene_5finfrastructure_5fgroup_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_scene_5finfrastructure_5fgroup_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_scene_5finfrastructure_5fgroup_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_scene_5finfrastructure_5fgroup_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure_Intrinsic_ParamsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure_Intrinsic_ParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure_Intrinsic_ParamsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure_Intrinsic_ParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure_Intrinsic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure_Intrinsic, params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure_Extrinsic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure_Extrinsic, id_),
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure_Extrinsic, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure, type_),
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure, extrinsic_),
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure, intrinsic_),
  PROTOBUF_FIELD_OFFSET(::sim_msg::Infrastructure, waypoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sim_msg::InfrastructureGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sim_msg::InfrastructureGroup, name_),
  PROTOBUF_FIELD_OFFSET(::sim_msg::InfrastructureGroup, infrastructure_),
  PROTOBUF_FIELD_OFFSET(::sim_msg::InfrastructureGroup, active_plan_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::sim_msg::Infrastructure_Intrinsic_ParamsEntry_DoNotUse)},
  { 9, -1, sizeof(::sim_msg::Infrastructure_Intrinsic)},
  { 15, -1, sizeof(::sim_msg::Infrastructure_Extrinsic)},
  { 22, -1, sizeof(::sim_msg::Infrastructure)},
  { 31, -1, sizeof(::sim_msg::InfrastructureGroup)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sim_msg::_Infrastructure_Intrinsic_ParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sim_msg::_Infrastructure_Intrinsic_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sim_msg::_Infrastructure_Extrinsic_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sim_msg::_Infrastructure_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sim_msg::_InfrastructureGroup_default_instance_),
};

const char descriptor_table_protodef_scene_5finfrastructure_5fgroup_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n scene_infrastructure_group.proto\022\007sim_"
  "msg\032\016waypoint.proto\"\360\002\n\016Infrastructure\022)"
  "\n\004type\030\001 \001(\0162\033.sim_msg.InfrastructureTyp"
  "e\0224\n\textrinsic\030\002 \001(\0132!.sim_msg.Infrastru"
  "cture.Extrinsic\0224\n\tintrinsic\030\003 \001(\0132!.sim"
  "_msg.Infrastructure.Intrinsic\022#\n\010waypoin"
  "t\030\004 \001(\0132\021.sim_msg.Waypoint\032y\n\tIntrinsic\022"
  "=\n\006params\030\001 \003(\0132-.sim_msg.Infrastructure"
  ".Intrinsic.ParamsEntry\032-\n\013ParamsEntry\022\013\n"
  "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\'\n\tExtrins"
  "ic\022\n\n\002ID\030\001 \001(\003\022\016\n\006Device\030\002 \001(\t\"i\n\023Infras"
  "tructureGroup\022\014\n\004name\030\001 \001(\t\022/\n\016Infrastru"
  "cture\030\002 \003(\0132\027.sim_msg.Infrastructure\022\023\n\013"
  "active_plan\030\003 \001(\005*\334\001\n\022InfrastructureType"
  "\022#\n\037INFRASTRUCTURE_TYPE_USER_DEFINE\020\000\022&\n"
  "\"INFRASTRUCTURE_TYPE_TRAFFIC_SIGNAL\020\001\022\033\n"
  "\027INFRASTRUCTURE_TYPE_RSU\020\002\022\036\n\032INFRASTRUC"
  "TURE_TYPE_CAMERA\020\003\022\035\n\031INFRASTRUCTURE_TYP"
  "E_LIDAR\020\004\022\035\n\031INFRASTRUCTURE_TYPE_RADAR\020\005"
  "b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_scene_5finfrastructure_5fgroup_2eproto_deps[1] = {
  &::descriptor_table_waypoint_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_scene_5finfrastructure_5fgroup_2eproto_sccs[5] = {
  &scc_info_Infrastructure_scene_5finfrastructure_5fgroup_2eproto.base,
  &scc_info_Infrastructure_Extrinsic_scene_5finfrastructure_5fgroup_2eproto.base,
  &scc_info_Infrastructure_Intrinsic_scene_5finfrastructure_5fgroup_2eproto.base,
  &scc_info_Infrastructure_Intrinsic_ParamsEntry_DoNotUse_scene_5finfrastructure_5fgroup_2eproto.base,
  &scc_info_InfrastructureGroup_scene_5finfrastructure_5fgroup_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_scene_5finfrastructure_5fgroup_2eproto_once;
static bool descriptor_table_scene_5finfrastructure_5fgroup_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scene_5finfrastructure_5fgroup_2eproto = {
  &descriptor_table_scene_5finfrastructure_5fgroup_2eproto_initialized, descriptor_table_protodef_scene_5finfrastructure_5fgroup_2eproto, "scene_infrastructure_group.proto", 768,
  &descriptor_table_scene_5finfrastructure_5fgroup_2eproto_once, descriptor_table_scene_5finfrastructure_5fgroup_2eproto_sccs, descriptor_table_scene_5finfrastructure_5fgroup_2eproto_deps, 5, 1,
  schemas, file_default_instances, TableStruct_scene_5finfrastructure_5fgroup_2eproto::offsets,
  file_level_metadata_scene_5finfrastructure_5fgroup_2eproto, 5, file_level_enum_descriptors_scene_5finfrastructure_5fgroup_2eproto, file_level_service_descriptors_scene_5finfrastructure_5fgroup_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_scene_5finfrastructure_5fgroup_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_scene_5finfrastructure_5fgroup_2eproto), true);
namespace sim_msg {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InfrastructureType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_scene_5finfrastructure_5fgroup_2eproto);
  return file_level_enum_descriptors_scene_5finfrastructure_5fgroup_2eproto[0];
}
bool InfrastructureType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

Infrastructure_Intrinsic_ParamsEntry_DoNotUse::Infrastructure_Intrinsic_ParamsEntry_DoNotUse() {}
Infrastructure_Intrinsic_ParamsEntry_DoNotUse::Infrastructure_Intrinsic_ParamsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Infrastructure_Intrinsic_ParamsEntry_DoNotUse::MergeFrom(const Infrastructure_Intrinsic_ParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Infrastructure_Intrinsic_ParamsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Infrastructure_Intrinsic_ParamsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Infrastructure_Intrinsic::InitAsDefaultInstance() {
}
class Infrastructure_Intrinsic::_Internal {
 public:
};

Infrastructure_Intrinsic::Infrastructure_Intrinsic()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sim_msg.Infrastructure.Intrinsic)
}
Infrastructure_Intrinsic::Infrastructure_Intrinsic(const Infrastructure_Intrinsic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  // @@protoc_insertion_point(copy_constructor:sim_msg.Infrastructure.Intrinsic)
}

void Infrastructure_Intrinsic::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Infrastructure_Intrinsic_scene_5finfrastructure_5fgroup_2eproto.base);
}

Infrastructure_Intrinsic::~Infrastructure_Intrinsic() {
  // @@protoc_insertion_point(destructor:sim_msg.Infrastructure.Intrinsic)
  SharedDtor();
}

void Infrastructure_Intrinsic::SharedDtor() {
}

void Infrastructure_Intrinsic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Infrastructure_Intrinsic& Infrastructure_Intrinsic::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Infrastructure_Intrinsic_scene_5finfrastructure_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void Infrastructure_Intrinsic::Clear() {
// @@protoc_insertion_point(message_clear_start:sim_msg.Infrastructure.Intrinsic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Infrastructure_Intrinsic::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, string> params = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&params_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Infrastructure_Intrinsic::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:sim_msg.Infrastructure.Intrinsic)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> params = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          Infrastructure_Intrinsic_ParamsEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              Infrastructure_Intrinsic_ParamsEntry_DoNotUse,
              std::string, std::string,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string > > parser(&params_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "sim_msg.Infrastructure.Intrinsic.ParamsEntry.key"));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "sim_msg.Infrastructure.Intrinsic.ParamsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sim_msg.Infrastructure.Intrinsic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sim_msg.Infrastructure.Intrinsic)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Infrastructure_Intrinsic::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sim_msg.Infrastructure.Intrinsic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> params = 1;
  if (!this->params().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "sim_msg.Infrastructure.Intrinsic.ParamsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "sim_msg.Infrastructure.Intrinsic.ParamsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->params().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Infrastructure_Intrinsic_ParamsEntry_DoNotUse::Funcs::SerializeToCodedStream(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it) {
        Infrastructure_Intrinsic_ParamsEntry_DoNotUse::Funcs::SerializeToCodedStream(1, it->first, it->second, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sim_msg.Infrastructure.Intrinsic)
}

::PROTOBUF_NAMESPACE_ID::uint8* Infrastructure_Intrinsic::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sim_msg.Infrastructure.Intrinsic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> params = 1;
  if (!this->params().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "sim_msg.Infrastructure.Intrinsic.ParamsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "sim_msg.Infrastructure.Intrinsic.ParamsEntry.value");
      }
    };

    if (false &&
        this->params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->params().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Infrastructure_Intrinsic_ParamsEntry_DoNotUse::Funcs::SerializeToArray(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->params().begin();
          it != this->params().end(); ++it) {
        target = Infrastructure_Intrinsic_ParamsEntry_DoNotUse::Funcs::SerializeToArray(1, it->first, it->second, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sim_msg.Infrastructure.Intrinsic)
  return target;
}

size_t Infrastructure_Intrinsic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sim_msg.Infrastructure.Intrinsic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> params = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->params_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->params().begin();
      it != this->params().end(); ++it) {
    total_size += Infrastructure_Intrinsic_ParamsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Infrastructure_Intrinsic::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sim_msg.Infrastructure.Intrinsic)
  GOOGLE_DCHECK_NE(&from, this);
  const Infrastructure_Intrinsic* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Infrastructure_Intrinsic>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sim_msg.Infrastructure.Intrinsic)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sim_msg.Infrastructure.Intrinsic)
    MergeFrom(*source);
  }
}

void Infrastructure_Intrinsic::MergeFrom(const Infrastructure_Intrinsic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sim_msg.Infrastructure.Intrinsic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
}

void Infrastructure_Intrinsic::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sim_msg.Infrastructure.Intrinsic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Infrastructure_Intrinsic::CopyFrom(const Infrastructure_Intrinsic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sim_msg.Infrastructure.Intrinsic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Infrastructure_Intrinsic::IsInitialized() const {
  return true;
}

void Infrastructure_Intrinsic::InternalSwap(Infrastructure_Intrinsic* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  params_.Swap(&other->params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Infrastructure_Intrinsic::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Infrastructure_Extrinsic::InitAsDefaultInstance() {
}
class Infrastructure_Extrinsic::_Internal {
 public:
};

Infrastructure_Extrinsic::Infrastructure_Extrinsic()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sim_msg.Infrastructure.Extrinsic)
}
Infrastructure_Extrinsic::Infrastructure_Extrinsic(const Infrastructure_Extrinsic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.device().empty()) {
    device_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:sim_msg.Infrastructure.Extrinsic)
}

void Infrastructure_Extrinsic::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Infrastructure_Extrinsic_scene_5finfrastructure_5fgroup_2eproto.base);
  device_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_ = PROTOBUF_LONGLONG(0);
}

Infrastructure_Extrinsic::~Infrastructure_Extrinsic() {
  // @@protoc_insertion_point(destructor:sim_msg.Infrastructure.Extrinsic)
  SharedDtor();
}

void Infrastructure_Extrinsic::SharedDtor() {
  device_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Infrastructure_Extrinsic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Infrastructure_Extrinsic& Infrastructure_Extrinsic::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Infrastructure_Extrinsic_scene_5finfrastructure_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void Infrastructure_Extrinsic::Clear() {
// @@protoc_insertion_point(message_clear_start:sim_msg.Infrastructure.Extrinsic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Infrastructure_Extrinsic::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 ID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Device = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_device(), ptr, ctx, "sim_msg.Infrastructure.Extrinsic.Device");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Infrastructure_Extrinsic::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:sim_msg.Infrastructure.Extrinsic)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ID = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Device = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->device().data(), static_cast<int>(this->device().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "sim_msg.Infrastructure.Extrinsic.Device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sim_msg.Infrastructure.Extrinsic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sim_msg.Infrastructure.Extrinsic)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Infrastructure_Extrinsic::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sim_msg.Infrastructure.Extrinsic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // string Device = 2;
  if (this->device().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sim_msg.Infrastructure.Extrinsic.Device");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sim_msg.Infrastructure.Extrinsic)
}

::PROTOBUF_NAMESPACE_ID::uint8* Infrastructure_Extrinsic::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sim_msg.Infrastructure.Extrinsic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // string Device = 2;
  if (this->device().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sim_msg.Infrastructure.Extrinsic.Device");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->device(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sim_msg.Infrastructure.Extrinsic)
  return target;
}

size_t Infrastructure_Extrinsic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sim_msg.Infrastructure.Extrinsic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Device = 2;
  if (this->device().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->device());
  }

  // int64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Infrastructure_Extrinsic::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sim_msg.Infrastructure.Extrinsic)
  GOOGLE_DCHECK_NE(&from, this);
  const Infrastructure_Extrinsic* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Infrastructure_Extrinsic>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sim_msg.Infrastructure.Extrinsic)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sim_msg.Infrastructure.Extrinsic)
    MergeFrom(*source);
  }
}

void Infrastructure_Extrinsic::MergeFrom(const Infrastructure_Extrinsic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sim_msg.Infrastructure.Extrinsic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device().size() > 0) {

    device_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Infrastructure_Extrinsic::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sim_msg.Infrastructure.Extrinsic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Infrastructure_Extrinsic::CopyFrom(const Infrastructure_Extrinsic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sim_msg.Infrastructure.Extrinsic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Infrastructure_Extrinsic::IsInitialized() const {
  return true;
}

void Infrastructure_Extrinsic::InternalSwap(Infrastructure_Extrinsic* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  device_.Swap(&other->device_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Infrastructure_Extrinsic::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Infrastructure::InitAsDefaultInstance() {
  ::sim_msg::_Infrastructure_default_instance_._instance.get_mutable()->extrinsic_ = const_cast< ::sim_msg::Infrastructure_Extrinsic*>(
      ::sim_msg::Infrastructure_Extrinsic::internal_default_instance());
  ::sim_msg::_Infrastructure_default_instance_._instance.get_mutable()->intrinsic_ = const_cast< ::sim_msg::Infrastructure_Intrinsic*>(
      ::sim_msg::Infrastructure_Intrinsic::internal_default_instance());
  ::sim_msg::_Infrastructure_default_instance_._instance.get_mutable()->waypoint_ = const_cast< ::sim_msg::Waypoint*>(
      ::sim_msg::Waypoint::internal_default_instance());
}
class Infrastructure::_Internal {
 public:
  static const ::sim_msg::Infrastructure_Extrinsic& extrinsic(const Infrastructure* msg);
  static const ::sim_msg::Infrastructure_Intrinsic& intrinsic(const Infrastructure* msg);
  static const ::sim_msg::Waypoint& waypoint(const Infrastructure* msg);
};

const ::sim_msg::Infrastructure_Extrinsic&
Infrastructure::_Internal::extrinsic(const Infrastructure* msg) {
  return *msg->extrinsic_;
}
const ::sim_msg::Infrastructure_Intrinsic&
Infrastructure::_Internal::intrinsic(const Infrastructure* msg) {
  return *msg->intrinsic_;
}
const ::sim_msg::Waypoint&
Infrastructure::_Internal::waypoint(const Infrastructure* msg) {
  return *msg->waypoint_;
}
void Infrastructure::clear_waypoint() {
  if (GetArenaNoVirtual() == nullptr && waypoint_ != nullptr) {
    delete waypoint_;
  }
  waypoint_ = nullptr;
}
Infrastructure::Infrastructure()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sim_msg.Infrastructure)
}
Infrastructure::Infrastructure(const Infrastructure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_extrinsic()) {
    extrinsic_ = new ::sim_msg::Infrastructure_Extrinsic(*from.extrinsic_);
  } else {
    extrinsic_ = nullptr;
  }
  if (from.has_intrinsic()) {
    intrinsic_ = new ::sim_msg::Infrastructure_Intrinsic(*from.intrinsic_);
  } else {
    intrinsic_ = nullptr;
  }
  if (from.has_waypoint()) {
    waypoint_ = new ::sim_msg::Waypoint(*from.waypoint_);
  } else {
    waypoint_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:sim_msg.Infrastructure)
}

void Infrastructure::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Infrastructure_scene_5finfrastructure_5fgroup_2eproto.base);
  ::memset(&extrinsic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&extrinsic_)) + sizeof(type_));
}

Infrastructure::~Infrastructure() {
  // @@protoc_insertion_point(destructor:sim_msg.Infrastructure)
  SharedDtor();
}

void Infrastructure::SharedDtor() {
  if (this != internal_default_instance()) delete extrinsic_;
  if (this != internal_default_instance()) delete intrinsic_;
  if (this != internal_default_instance()) delete waypoint_;
}

void Infrastructure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Infrastructure& Infrastructure::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Infrastructure_scene_5finfrastructure_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void Infrastructure::Clear() {
// @@protoc_insertion_point(message_clear_start:sim_msg.Infrastructure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && extrinsic_ != nullptr) {
    delete extrinsic_;
  }
  extrinsic_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && intrinsic_ != nullptr) {
    delete intrinsic_;
  }
  intrinsic_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && waypoint_ != nullptr) {
    delete waypoint_;
  }
  waypoint_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Infrastructure::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .sim_msg.InfrastructureType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_type(static_cast<::sim_msg::InfrastructureType>(val));
        } else goto handle_unusual;
        continue;
      // .sim_msg.Infrastructure.Extrinsic extrinsic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_extrinsic(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sim_msg.Infrastructure.Intrinsic intrinsic = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_intrinsic(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sim_msg.Waypoint waypoint = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_waypoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Infrastructure::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:sim_msg.Infrastructure)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sim_msg.InfrastructureType type = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::sim_msg::InfrastructureType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sim_msg.Infrastructure.Extrinsic extrinsic = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_extrinsic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sim_msg.Infrastructure.Intrinsic intrinsic = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_intrinsic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sim_msg.Waypoint waypoint = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_waypoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sim_msg.Infrastructure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sim_msg.Infrastructure)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Infrastructure::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sim_msg.Infrastructure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sim_msg.InfrastructureType type = 1;
  if (this->type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .sim_msg.Infrastructure.Extrinsic extrinsic = 2;
  if (this->has_extrinsic()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::extrinsic(this), output);
  }

  // .sim_msg.Infrastructure.Intrinsic intrinsic = 3;
  if (this->has_intrinsic()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::intrinsic(this), output);
  }

  // .sim_msg.Waypoint waypoint = 4;
  if (this->has_waypoint()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::waypoint(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sim_msg.Infrastructure)
}

::PROTOBUF_NAMESPACE_ID::uint8* Infrastructure::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sim_msg.Infrastructure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sim_msg.InfrastructureType type = 1;
  if (this->type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .sim_msg.Infrastructure.Extrinsic extrinsic = 2;
  if (this->has_extrinsic()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::extrinsic(this), target);
  }

  // .sim_msg.Infrastructure.Intrinsic intrinsic = 3;
  if (this->has_intrinsic()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::intrinsic(this), target);
  }

  // .sim_msg.Waypoint waypoint = 4;
  if (this->has_waypoint()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::waypoint(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sim_msg.Infrastructure)
  return target;
}

size_t Infrastructure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sim_msg.Infrastructure)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sim_msg.Infrastructure.Extrinsic extrinsic = 2;
  if (this->has_extrinsic()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extrinsic_);
  }

  // .sim_msg.Infrastructure.Intrinsic intrinsic = 3;
  if (this->has_intrinsic()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *intrinsic_);
  }

  // .sim_msg.Waypoint waypoint = 4;
  if (this->has_waypoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *waypoint_);
  }

  // .sim_msg.InfrastructureType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Infrastructure::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sim_msg.Infrastructure)
  GOOGLE_DCHECK_NE(&from, this);
  const Infrastructure* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Infrastructure>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sim_msg.Infrastructure)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sim_msg.Infrastructure)
    MergeFrom(*source);
  }
}

void Infrastructure::MergeFrom(const Infrastructure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sim_msg.Infrastructure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_extrinsic()) {
    mutable_extrinsic()->::sim_msg::Infrastructure_Extrinsic::MergeFrom(from.extrinsic());
  }
  if (from.has_intrinsic()) {
    mutable_intrinsic()->::sim_msg::Infrastructure_Intrinsic::MergeFrom(from.intrinsic());
  }
  if (from.has_waypoint()) {
    mutable_waypoint()->::sim_msg::Waypoint::MergeFrom(from.waypoint());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Infrastructure::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sim_msg.Infrastructure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Infrastructure::CopyFrom(const Infrastructure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sim_msg.Infrastructure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Infrastructure::IsInitialized() const {
  return true;
}

void Infrastructure::InternalSwap(Infrastructure* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(extrinsic_, other->extrinsic_);
  swap(intrinsic_, other->intrinsic_);
  swap(waypoint_, other->waypoint_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Infrastructure::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InfrastructureGroup::InitAsDefaultInstance() {
}
class InfrastructureGroup::_Internal {
 public:
};

InfrastructureGroup::InfrastructureGroup()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sim_msg.InfrastructureGroup)
}
InfrastructureGroup::InfrastructureGroup(const InfrastructureGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      infrastructure_(from.infrastructure_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  active_plan_ = from.active_plan_;
  // @@protoc_insertion_point(copy_constructor:sim_msg.InfrastructureGroup)
}

void InfrastructureGroup::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InfrastructureGroup_scene_5finfrastructure_5fgroup_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  active_plan_ = 0;
}

InfrastructureGroup::~InfrastructureGroup() {
  // @@protoc_insertion_point(destructor:sim_msg.InfrastructureGroup)
  SharedDtor();
}

void InfrastructureGroup::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InfrastructureGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InfrastructureGroup& InfrastructureGroup::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InfrastructureGroup_scene_5finfrastructure_5fgroup_2eproto.base);
  return *internal_default_instance();
}


void InfrastructureGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:sim_msg.InfrastructureGroup)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infrastructure_.Clear();
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  active_plan_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InfrastructureGroup::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "sim_msg.InfrastructureGroup.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .sim_msg.Infrastructure Infrastructure = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_infrastructure(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // int32 active_plan = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          active_plan_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InfrastructureGroup::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:sim_msg.InfrastructureGroup)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "sim_msg.InfrastructureGroup.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sim_msg.Infrastructure Infrastructure = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_infrastructure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 active_plan = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &active_plan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sim_msg.InfrastructureGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sim_msg.InfrastructureGroup)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InfrastructureGroup::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sim_msg.InfrastructureGroup)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sim_msg.InfrastructureGroup.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .sim_msg.Infrastructure Infrastructure = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infrastructure_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->infrastructure(static_cast<int>(i)),
      output);
  }

  // int32 active_plan = 3;
  if (this->active_plan() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->active_plan(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sim_msg.InfrastructureGroup)
}

::PROTOBUF_NAMESPACE_ID::uint8* InfrastructureGroup::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sim_msg.InfrastructureGroup)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sim_msg.InfrastructureGroup.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .sim_msg.Infrastructure Infrastructure = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infrastructure_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->infrastructure(static_cast<int>(i)), target);
  }

  // int32 active_plan = 3;
  if (this->active_plan() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->active_plan(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sim_msg.InfrastructureGroup)
  return target;
}

size_t InfrastructureGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sim_msg.InfrastructureGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sim_msg.Infrastructure Infrastructure = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->infrastructure_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->infrastructure(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 active_plan = 3;
  if (this->active_plan() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->active_plan());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InfrastructureGroup::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sim_msg.InfrastructureGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const InfrastructureGroup* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InfrastructureGroup>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sim_msg.InfrastructureGroup)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sim_msg.InfrastructureGroup)
    MergeFrom(*source);
  }
}

void InfrastructureGroup::MergeFrom(const InfrastructureGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sim_msg.InfrastructureGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infrastructure_.MergeFrom(from.infrastructure_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.active_plan() != 0) {
    set_active_plan(from.active_plan());
  }
}

void InfrastructureGroup::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sim_msg.InfrastructureGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfrastructureGroup::CopyFrom(const InfrastructureGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sim_msg.InfrastructureGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfrastructureGroup::IsInitialized() const {
  return true;
}

void InfrastructureGroup::InternalSwap(InfrastructureGroup* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&infrastructure_)->InternalSwap(CastToBase(&other->infrastructure_));
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(active_plan_, other->active_plan_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InfrastructureGroup::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sim_msg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sim_msg::Infrastructure_Intrinsic_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::sim_msg::Infrastructure_Intrinsic_ParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::sim_msg::Infrastructure_Intrinsic_ParamsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::sim_msg::Infrastructure_Intrinsic* Arena::CreateMaybeMessage< ::sim_msg::Infrastructure_Intrinsic >(Arena* arena) {
  return Arena::CreateInternal< ::sim_msg::Infrastructure_Intrinsic >(arena);
}
template<> PROTOBUF_NOINLINE ::sim_msg::Infrastructure_Extrinsic* Arena::CreateMaybeMessage< ::sim_msg::Infrastructure_Extrinsic >(Arena* arena) {
  return Arena::CreateInternal< ::sim_msg::Infrastructure_Extrinsic >(arena);
}
template<> PROTOBUF_NOINLINE ::sim_msg::Infrastructure* Arena::CreateMaybeMessage< ::sim_msg::Infrastructure >(Arena* arena) {
  return Arena::CreateInternal< ::sim_msg::Infrastructure >(arena);
}
template<> PROTOBUF_NOINLINE ::sim_msg::InfrastructureGroup* Arena::CreateMaybeMessage< ::sim_msg::InfrastructureGroup >(Arena* arena) {
  return Arena::CreateInternal< ::sim_msg::InfrastructureGroup >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
